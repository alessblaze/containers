# Copyright Aless Microsystems. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0
ARG MARIADB_VERSION_MAJOR=11.4
ARG MARIADB_VERSION_MINOR=11.4.6
ARG GCC_TOOLSET_VERSION=12
ARG GO_VERSION=1.24.3
# Stage 1: Builder Stage for Build Essentials
FROM oraclelinux:9 AS builder
ARG MARIADB_VERSION_MAJOR
ARG MARIADB_VERSION_MINOR
ARG GCC_TOOLSET_VERSION
ARG MYSQL_SHELL_VERSION
RUN dnf update -y && dnf install -y dnf-plugins-core epel-release
RUN dnf config-manager --enable ol9_codeready_builder
RUN dnf update -y && dnf install -y gcc-toolset-${GCC_TOOLSET_VERSION}-gcc gcc-toolset-${GCC_TOOLSET_VERSION}-gcc-c++ gcc-toolset-${GCC_TOOLSET_VERSION}-binutils gcc-toolset-${GCC_TOOLSET_VERSION}-annobin-annocheck gcc-toolset-${GCC_TOOLSET_VERSION}-annobin-plugin-gcc wget numactl-libs systemd-devel cyrus-sasl-gssapi krb5-devel cmake make openssl-devel 
RUN dnf install -y bison pkgconfig openldap-devel cyrus-sasl-devel cyrus-sasl-gssapi ncurses-devel elfutils-devel elfutils libaio-devel libtirpc-devel rpcgen cyrus-sasl-scram perl libcurl-devel 
RUN dnf install -y curl-devel libaio-devel gcc-toolset-${GCC_TOOLSET_VERSION}-libatomic-devel audit-libs-devel bzip2-devel libcap-ng-devel e2fsprogs-devel libxcrypt-devel libev-devel libffi-devel gcc-c++ gmp-devel gnutls-devel krb5-devel nettle-devel libidn2-devel keyutils-libs-devel openldap-devel p11-kit-devel pam-devel cyrus-sasl-devel openssl-devel libstdc++-devel libtasn1-devel libtirpc-devel systemd-devel libunistring-devel libuuid-devel procps-ng-devel zlib-devel jemalloc-devel

RUN mkdir -v /build \
    && cd /build \
    && dnf -y install tar wget \
    && wget https://archive.mariadb.org/mariadb-${MARIADB_VERSION_MINOR}/source/mariadb-${MARIADB_VERSION_MINOR}.tar.gz \
    && tar -xvf mariadb-${MARIADB_VERSION_MINOR}.tar.gz
    
RUN cd /build/mariadb-${MARIADB_VERSION_MINOR} \ 
    && cmake  -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/tmp/boost/ -DCMAKE_INSTALL_PREFIX=/opt/bitnami/mariadb -DDEFAULT_SYSCONFDIR=/opt/bitnami/mariadb/conf -DSYSCONFDIR=/opt/bitnami/mariadb/conf -DINSTALL_SBINDIR=sbin -DINSTALL_SCRIPTDIR=/opt/bitnami/mariadb/bin -DINSTALL_PLUGINDIR=plugin -DINSTALL_INFODIR=/opt/bitnami/mariadb/info -DINSTALL_SUPPORTFILESDIR=/opt/bitnami/mariadb/share -DMYSQL_DATADIR=/opt/bitnami/mariadb/data -DCURSES_INCLUDE_PATH=/usr/include/ -DMYSQL_UNIX_ADDR=/opt/bitnami/mariadb/tmp/mysql.sock -DENABLED_LOCAL_INFILE=ON -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DWITH_FEDERATED_STORAGE_ENGINE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DPLUGIN_AUTH_PAM=YES -DCMAKE_BUILD_TYPE=Release \
    && make -j9 \
    && make install
#RUN dnf install -y antlr-tool ant-antlr
#RUN cd /build \
#   && wget https://www.antlr.org/download/antlr4-cpp-runtime-4.13.2-source.zip \
#   && dnf install -y unzip \
#   && unzip antlr4-cpp-runtime-4.13.2-source.zip -d antlr4 \
#   && cd antlr4 \
#   && mkdir build \ 
#   && mkdir run \ 
#   && cd build \
#   && cmake  .. \
#   && make -j8 \
#   && mkdir -p /opt/bitnami/common \
#   && DESTDIR=/opt/bitnami/common make install
#RUN cd /build \
#    && wget https://dev.mysql.com/get/Downloads/MySQL-Shell/mysql-shell-${MYSQL_SHELL_VERSION}-src.tar.gz \
#    && tar -xvf mysql-shell-${MYSQL_SHELL_VERSION}-src.tar.gz \
#    && cd  mysql-shell-${MYSQL_SHELL_VERSION}-src \
#    && cmake -DMYSQL_SOURCE_DIR=/build/percona-server-${MYSQL_VERSION_MINOR} -DMYSQL_BUILD_DIR=/build/percona-server-${MYSQL_VERSION_MINOR}/build -DHAVE_PYTHON=0 -DHAVE_V8=0 -DCMAKE_PREFIX_PATH=/opt/bitnami/common -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/bitnami/mysql \
#    && make -j8 \
#    && make install
ARG TARGETARCH
ARG GO_VERSION    
RUN cd /build \
   && wget https://go.dev/dl/go${GO_VERSION}.linux-${TARGETARCH}.tar.gz \
   &&  rm -rf /usr/local/go && tar -C /usr/local -xzf go${GO_VERSION}.linux-${TARGETARCH}.tar.gz
ENV PATH="$PATH:/usr/local/go/bin"
RUN cd /build \
   && wget https://github.com/bitnami/ini-file/archive/refs/heads/main.zip -O ini-file.zip \
   && unzip ini-file.zip \
   && cd ./ini-file-main \
   && make build/${TARGETARCH}     

FROM oraclelinux:9-slim

ARG DOWNLOADS_URL="downloads.bitnami.com/files/stacksmith"
ARG TARGETARCH
ARG SUPERCRONIC_SHA1SUM_arm64=e0f0c06ebc5627e43b25475711e694450489ab00
ARG SUPERCRONIC_ARCH=${TARGETARCH}
ARG SUPERCRONIC_SHA1SUM_amd64=71b0d58cc53f6bd72cf2f293e09e294b79c666d8
ARG SUPERCRONIC_VERSION=0.2.33
ARG SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v${SUPERCRONIC_VERSION}/supercronic-linux-${SUPERCRONIC_ARCH} \
  SUPERCRONIC=supercronic-linux-${SUPERCRONIC_ARCH}


LABEL org.opencontainers.image.base.name="hub.docker.com/_/oraclelinux/" \
      org.opencontainers.image.created="2025-05-1T13:29:49Z" \
      org.opencontainers.image.description="Application packaged by Aless Microsystems" \
      org.opencontainers.image.documentation="https://github.com/bitnami/containers/tree/main/bitnami/mariadb/README.md" \
      org.opencontainers.image.ref.name="11.4.5-ol9-ams" \
      org.opencontainers.image.source="https://github.com/bitnami/containers/tree/main/bitnami/mariadb" \
      org.opencontainers.image.title="mariadb" \
      org.opencontainers.image.vendor="Aless Microsystems" \
      org.opencontainers.image.version="11.4.5"

ENV HOME="/" \
    OS_ARCH="${TARGETARCH:-amd64}" \
    OS_FLAVOUR="ol9" \
    OS_NAME="linux"

COPY --from=builder /opt/bitnami/mariadb /opt/bitnami/mariadb
#COPY --from=builder /opt/bitnami/common /opt/bitnami/common
COPY --from=builder /build/ini-file-main/out/ini-file /opt/bitnami/common/bin/ini-file


COPY prebuildfs /
SHELL ["/bin/bash", "-o", "errexit", "-o", "nounset", "-o", "pipefail", "-c"]
# Install required system packages and dependencies
RUN microdnf update -y && microdnf install -y dnf-plugins-core epel-release
RUN microdnf -y install ca-certificates curl libaio audit-libs libcap-ng libxcrypt libgcc libicu xz-libs ncurses-libs pam openssl-libs libstdc++ ncurses-libs libxml2 procps-ng psmisc zlib findutils gawk supervisor
RUN mkdir -p /tmp/bitnami/pkg/cache/ ; cd /tmp/bitnami/pkg/cache/ || exit 1 ; \
    COMPONENTS=( \
#      "ini-file-1.4.7-15-linux-${OS_ARCH}-debian-12" \
#      "mysql-8.4.5-0-linux-${OS_ARCH}-debian-12" \
    ) ; \
    for COMPONENT in "${COMPONENTS[@]}"; do \
      if [ ! -f "${COMPONENT}.tar.gz" ]; then \
        curl -SsLf "https://${DOWNLOADS_URL}/${COMPONENT}.tar.gz" -O ; \
        curl -SsLf "https://${DOWNLOADS_URL}/${COMPONENT}.tar.gz.sha256" -O ; \
      fi ; \
      sha256sum -c "${COMPONENT}.tar.gz.sha256" ; \
      tar -zxf "${COMPONENT}.tar.gz" -C /opt/bitnami --strip-components=2 --no-same-owner ; \
      rm -rf "${COMPONENT}".tar.gz{,.sha256} ; \
    done
RUN microdnf clean all
RUN chmod g+rwX /opt/bitnami
RUN find / -perm /6000 -type f -exec chmod a-s {} \; || true
RUN mkdir /docker-entrypoint-initdb.d
RUN touch /var/log/supervisor/supervisord.log \
  && chown 1001 /var/log/supervisor/supervisord.log \
  && sed -i 's,/run/supervisor/supervisor.sock,/tmp/supervisor.sock,;s,;chmod=0700,chmod=0700,' /etc/supervisord.conf \
  && sed -i 's,/run/supervisord.pid,/tmp/supervisor.pid,' /etc/supervisord.conf 
RUN echo "[eventlistener:exit_on_maridb_failure]" >> /etc/supervisord.conf  && \
    echo "command=/opt/bitnami/scripts/mariadb-failure-watch" >> /etc/supervisord.conf  && \
    echo "events=PROCESS_STATE_FATAL" >> /etc/supervisord.conf && \
    echo "stderr_logfile=/tmp/error.out" >> /etc/supervisord.conf && \
    echo "stdout_logfile=/tmp/event.out" >> /etc/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisord.conf && \
    echo "[DEBUG] Added event listener for Mariadb failure to supervisord.conf"    

RUN curl -fsSLO "$SUPERCRONIC_URL" \
  && eval echo "\$SUPERCRONIC_SHA1SUM_${TARGETARCH} ${SUPERCRONIC}" | sha1sum -c - \
  && chmod +x "$SUPERCRONIC" \
  && mv "$SUPERCRONIC" "/usr/local/bin/${SUPERCRONIC}" \
  && ln -s "/usr/local/bin/${SUPERCRONIC}" /usr/local/bin/supercronic
    
COPY rootfs /
RUN cp -v /opt/bitnami/scripts/conf/*.ini /etc/supervisord.d
RUN /opt/bitnami/scripts/mariadb/postunpack.sh
ENV APP_VERSION="11.4.5" \
    BITNAMI_APP_NAME="mariadb" \
    PATH="/opt/bitnami/common/bin:/opt/bitnami/common/sbin:/opt/bitnami/mariadb/bin:/opt/bitnami/mariadb/sbin:$PATH"

EXPOSE 3306

USER 1001
#ENTRYPOINT [ "/opt/bitnami/scripts/mariadb/entrypoint.sh" ]
#CMD [ "/opt/bitnami/scripts/mariadb/run.sh" ]
ENTRYPOINT ["/opt/bitnami/scripts/mariadb/start.sh"]
