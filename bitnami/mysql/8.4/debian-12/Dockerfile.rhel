# Copyright Aless Microsystems. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0
ARG MYSQL_VERSION_MAJOR=8.4
ARG MYSQL_VERSION_MINOR=8.4.5
ARG GCC_TOOLSET_VERSION=12
ARG GO_VERSION=1.24.2
# Stage 1: Builder Stage for Build Essentials
FROM oraclelinux:9 AS builder
ARG MYSQL_VERSION_MAJOR
ARG MYSQL_VERSION_MINOR
ARG GCC_TOOLSET_VERSION
RUN dnf update -y && dnf install -y dnf-plugins-core
#RUN dnf config-manager --set-enabled crb
RUN dnf config-manager --enable ol9_codeready_builder
RUN mkdir -v /build \
    && cd /build \
    && dnf -y install tar wget \
    && wget https://cdn.mysql.com/Downloads/MySQL-${MYSQL_VERSION_MAJOR}/mysql-${MYSQL_VERSION_MINOR}.tar.gz \
    && tar -xvf mysql-${MYSQL_VERSION_MINOR}.tar.gz
RUN dnf update -y && dnf install -y gcc-toolset-${GCC_TOOLSET_VERSION}-gcc gcc-toolset-${GCC_TOOLSET_VERSION}-gcc-c++ gcc-toolset-${GCC_TOOLSET_VERSION}-binutils gcc-toolset-${GCC_TOOLSET_VERSION}-annobin-annocheck gcc-toolset-${GCC_TOOLSET_VERSION}-annobin-plugin-gcc wget numactl-libs systemd-devel cyrus-sasl-gssapi krb5-devel cmake make openssl-devel
RUN cd /build/mysql-${MYSQL_VERSION_MINOR} \
    && dnf install -y bison pkgconfig openldap-devel cyrus-sasl-devel cyrus-sasl-gssapi ncurses-devel elfutils-devel elfutils libaio-devel libtirpc-devel rpcgen cyrus-sasl-scram perl protobuf protobuf-lite-devel \
    && mkdir -v build \
    && cd build \
    && cmake ..  -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/tmp/boost/ -DBUILD_CONFIG=mysql_release -DWITH_AUTHENTICATION_LDAP=1 -DCMAKE_INSTALL_PREFIX=/opt/bitnami/mysql -DSYSCONFDIR=/opt/bitnami/mysql/conf -DDEFAULT_SYSCONFDIR=/opt/bitnami/mysql/conf  -DCMAKE_BUILD_TYPE=Release -DWITH_PROTOBUF=system -DWITH_ZSTD=system  -DWITH-SSL=system  -DWITH-LZ4=system  -DWITH-ZLIB=system \
    && make -j9 \
    && make install
ARG TARGETARCH
ARG GO_VERSION    
RUN cd /build \
   && wget https://go.dev/dl/go${GO_VERSION}.linux-${TARGETARCH}.tar.gz \
   &&  rm -rf /usr/local/go && tar -C /usr/local -xzf go${GO_VERSION}.linux-${TARGETARCH}.tar.gz
ENV PATH="$PATH:/usr/local/go/bin"
RUN cd /build \
   && wget https://github.com/bitnami/ini-file/archive/refs/heads/main.zip -O ini-file.zip \
   && unzip ini-file.zip \
   && cd ./ini-file-main \
   && make build/${TARGETARCH}     

FROM oraclelinux:9-slim

ARG DOWNLOADS_URL="downloads.bitnami.com/files/stacksmith"
ARG TARGETARCH

LABEL org.opencontainers.image.base.name="docker.io/redhat/ubi9-minimal" \
      org.opencontainers.image.created="2025-05-1T13:29:49Z" \
      org.opencontainers.image.description="Application packaged by Aless Microsystems" \
      org.opencontainers.image.documentation="https://github.com/bitnami/containers/tree/main/bitnami/mysql/README.md" \
      org.opencontainers.image.ref.name="8.4.5-rhel-ams" \
      org.opencontainers.image.source="https://github.com/bitnami/containers/tree/main/bitnami/mysql" \
      org.opencontainers.image.title="mysql" \
      org.opencontainers.image.vendor="Aless Microsystems" \
      org.opencontainers.image.version="8.4.5"

ENV HOME="/" \
    OS_ARCH="${TARGETARCH:-amd64}" \
    OS_FLAVOUR="rhel9" \
    OS_NAME="linux"

COPY --from=builder /opt/bitnami/mysql /opt/bitnami/mysql
COPY --from=builder /build/ini-file-main/out/ini-file /opt/bitnami/common/bin/ini-file
COPY prebuildfs /
SHELL ["/bin/bash", "-o", "errexit", "-o", "nounset", "-o", "pipefail", "-c"]
# Install required system packages and dependencies
RUN microdnf -y install ca-certificates gcc libaio libcom_err libgcc krb5-libs keyutils cyrus-sasl-lib openssl-libs libstdc++ ncurses-libs libtirpc systemd-libs procps-ng psmisc findutils gawk
RUN mkdir -p /tmp/bitnami/pkg/cache/ ; cd /tmp/bitnami/pkg/cache/ || exit 1 ; \
    COMPONENTS=( \
#      "ini-file-1.4.7-15-linux-${OS_ARCH}-debian-12" \
#      "mysql-8.4.5-0-linux-${OS_ARCH}-debian-12" \
    ) ; \
    for COMPONENT in "${COMPONENTS[@]}"; do \
      if [ ! -f "${COMPONENT}.tar.gz" ]; then \
        curl -SsLf "https://${DOWNLOADS_URL}/${COMPONENT}.tar.gz" -O ; \
        curl -SsLf "https://${DOWNLOADS_URL}/${COMPONENT}.tar.gz.sha256" -O ; \
      fi ; \
      sha256sum -c "${COMPONENT}.tar.gz.sha256" ; \
      tar -zxf "${COMPONENT}.tar.gz" -C /opt/bitnami --strip-components=2 --no-same-owner ; \
      rm -rf "${COMPONENT}".tar.gz{,.sha256} ; \
    done
RUN microdnf clean all
RUN chmod g+rwX /opt/bitnami
RUN find / -perm /6000 -type f -exec chmod a-s {} \; || true
RUN mkdir /docker-entrypoint-initdb.d

COPY rootfs /
RUN /opt/bitnami/scripts/mysql/postunpack.sh
ENV APP_VERSION="8.4.5" \
    BITNAMI_APP_NAME="mysql" \
    PATH="/opt/bitnami/common/bin:/opt/bitnami/mysql/bin:/opt/bitnami/mysql/sbin:$PATH"

EXPOSE 3306

USER 1001
ENTRYPOINT [ "/opt/bitnami/scripts/mysql/entrypoint.sh" ]
CMD [ "/opt/bitnami/scripts/mysql/run.sh" ]
